version: '3' 

services:
  webapp: 
    image: ubuntu
    # domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir
    # 基本跟 docker run 中对应参数的功能一致。
    
    # 指定服务容器启动后执行的入口文件。
    entrypoint: /code/entrypoint.sh
    # 指定服务容器启动后执行的入口文件。
    user: nginx
    # 指定容器中工作目录
    working_dir: /code
    # 指定容器中搜索域名、主机名、mac 地址等。
    domainname: your_website.com 
    hostname: test 
    mac_address: 08-00-27-00-0C-0A
    # 允许容器中运行一些特权命令
    privileged: true
    # 指定容器退出后的重启策略为始终重启。该命令对保持服务始终运行十分有效，在生产环境 中推荐配置为 always 或者 unless-stopped 。
    restart: always
    # 以只读模式挂载容器的 root 文件系统，意味着不能对容器内容进行修改。
    read_only: true
    # 打开标准输入，可以接受外部输入。
    stdin_open: true
    # 模拟一个伪终端
    tty: true


    # Compose 模板文件支持动态读取主机的系统环境变量和当前目录下的 .env 文件中的变量。 通过${key}获取
    # 例如
    db: 
      image: "mongo:${MONGO_VERSION}"
